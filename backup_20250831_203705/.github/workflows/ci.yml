name: 🚀 UwU-CLI CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - name: 🚀 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: 🧪 Run tests
      run: |
        python -m pytest tests/ -v --cov=utils --cov-report=xml

    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: 🚀 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: 🔍 Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: 🎨 Format check with black
      run: |
        black --check --diff .

    - name: 📝 Import sorting check with isort
      run: |
        isort --check-only --diff .

  security:
    runs-on: ubuntu-latest
    steps:
    - name: 🚀 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: 🔒 Run security audit with bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true

    - name: 🛡️ Check for known vulnerabilities
      run: |
        safety check --json --output safety-report.json || true

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    needs: [test, lint, security]
    
    steps:
    - name: 🚀 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel

    - name: 🏗️ Build package
      run: |
        python -m build

    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: uwu-cli-build-${{ matrix.os }}
        path: dist/

  release:
    runs-on: ubuntu-latest
    needs: [test, lint, security, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 🚀 Checkout code
      uses: actions/checkout@v4

    - name: 🏷️ Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        body: |
          ## 🚀 UwU-CLI Release ${{ github.run_number }}
          
          ### ✅ What's New
          - Automated CI/CD pipeline
          - Enhanced testing and quality checks
          - Security auditing and vulnerability scanning
          
          ### 🔧 Technical Improvements
          - Cross-platform compatibility testing
          - Code quality and style enforcement
          - Automated build and packaging
          
          ### 📋 Full Changelog
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false 